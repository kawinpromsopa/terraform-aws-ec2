data "template_file" "user_data_http_asg" {
  template = "${file("${path.module}/templates/user_data_http_asg.yml")}"

  vars {
    name_prefix           = "${var.name_prefix}"
    vpc_cidr              = "${aws_vpc.main.cidr_block}"
    customer              = "${var.customer}"
    http_instance_id      = "${aws_instance.http.id}"
    s3_secret_bucket_name = "${var.s3_secret_bucket_name}"
    h1_domain             = "${local.h1_domain}"
    s1_domain             = "${local.s1_domain}"
    region                = "${var.region}"
  }
}

resource "aws_launch_configuration" "http" {
  name_prefix                 = "${var.name_prefix}-${var.customer}-http-"
  image_id                    = "${var.nginx_ami}"
  instance_type               = "${var.http_asg_instance_type}"
  user_data                   = "${data.template_file.user_data_http_asg.rendered}"
  associate_public_ip_address = true
  key_name                    = "${var.key_name}"
  iam_instance_profile        = "${aws_iam_instance_profile.app.id}"
  enable_monitoring           = false

  root_block_device {
    volume_size = 20
    volume_type = "gp2"
  }

  security_groups = [
    "${aws_security_group.common.id}",
    "${aws_security_group.http.id}",
  ]

  lifecycle {
    create_before_destroy = true
  }
}

resource "aws_autoscaling_group" "http" {
  name_prefix          = "${aws_launch_configuration.http.name}"
  vpc_zone_identifier  = ["${aws_subnet.a0.id}", "${aws_subnet.b0.id}"]
  launch_configuration = "${aws_launch_configuration.http.id}"
  health_check_type    = "ELB"
  min_size             = "${var.http_asg_min}"
  max_size             = "${var.http_asg_max}"

  target_group_arns = [
    "${aws_alb_target_group.http.arn}",
  ]

  lifecycle {
    create_before_destroy = true
  }

  tag {
    key                 = "Name"
    value               = "${var.name_prefix}-${var.customer}-http-asg"
    propagate_at_launch = true
  }

  tag {
    key                 = "Customer"
    value               = "${var.customer}"
    propagate_at_launch = true
  }

  tag {
    key                 = "Type"
    value               = "http_asg_server"
    propagate_at_launch = true
  }

  tag {
    key                 = "Components"
    value               = "http"
    propagate_at_launch = true
  }
}

resource "aws_autoscaling_schedule" "up_morning" {
  count                 = "${var.enable_working_hours_scale}"
  scheduled_action_name = "up-morning"
  min_size              = "${var.working_hours_min_instances}"
  max_size              = "${var.http_asg_max}"
  desired_capacity      = -1
  recurrence            = "0 1 * * MON-FRI"

  autoscaling_group_name = "${aws_autoscaling_group.http.name}"
}

resource "aws_autoscaling_schedule" "down_evening" {
  count                  = "${var.enable_working_hours_scale}"
  scheduled_action_name  = "down-evening"
  min_size               = 0
  max_size               = "${var.http_asg_max}"
  desired_capacity       = 0
  recurrence             = "0 12 * * MON-FRI"
  autoscaling_group_name = "${aws_autoscaling_group.http.name}"
}